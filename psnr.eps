%!PS-Adobe-2.0
%%Title: psnr.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Mon Feb 11 08:10:44 2008
%%DocumentFonts: (atend)
%%BoundingBox: 251 50 554 482
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (psnr.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Cheng Wei,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Feb 11 08:10:44 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 420 M
63 0 V
3389 0 R
-63 0 V
546 420 M
( 10) Rshow
1.000 UL
LTb
630 784 M
63 0 V
3389 0 R
-63 0 V
546 784 M
( 20) Rshow
1.000 UL
LTb
630 1148 M
63 0 V
3389 0 R
-63 0 V
-3473 0 R
( 30) Rshow
1.000 UL
LTb
630 1512 M
63 0 V
3389 0 R
-63 0 V
-3473 0 R
( 40) Rshow
1.000 UL
LTb
630 1876 M
63 0 V
3389 0 R
-63 0 V
-3473 0 R
( 50) Rshow
1.000 UL
LTb
630 2240 M
63 0 V
3389 0 R
-63 0 V
-3473 0 R
( 60) Rshow
1.000 UL
LTb
630 2604 M
63 0 V
3389 0 R
-63 0 V
-3473 0 R
( 70) Rshow
1.000 UL
LTb
630 420 M
0 63 V
0 2121 R
0 -63 V
630 280 M
( 0) Cshow
1.000 UL
LTb
944 420 M
0 63 V
0 2121 R
0 -63 V
944 280 M
( 50) Cshow
1.000 UL
LTb
1258 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
( 100) Cshow
1.000 UL
LTb
1571 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
( 150) Cshow
1.000 UL
LTb
1885 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
( 200) Cshow
1.000 UL
LTb
2199 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
( 250) Cshow
1.000 UL
LTb
2513 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
( 300) Cshow
1.000 UL
LTb
2827 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
( 350) Cshow
1.000 UL
LTb
3141 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
( 400) Cshow
1.000 UL
LTb
3454 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
( 450) Cshow
1.000 UL
LTb
3768 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
( 500) Cshow
1.000 UL
LTb
4082 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
( 550) Cshow
1.000 UL
LTb
1.000 UL
LTb
630 2604 N
630 420 L
3452 0 V
0 2184 V
-3452 0 V
Z stroke
LCb setrgbcolor
140 1512 M
currentpoint gsave translate 90 rotate 0 0 M
(PSNR) Cshow
grestore
LTb
LCb setrgbcolor
2356 70 M
(Received Vertices \(K\)) Cshow
LTb
2356 2814 M
(Relation between PSNR and received vertices) Cshow
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
2927 483 N
0 560 V
1071 0 V
0 -560 V
-1071 0 V
Z stroke
2927 1043 M
1071 0 V
1.000 UP
stroke
2.000 UL
LT0
LTb
3431 973 M
(RD VP1) Rshow
LT0
3515 973 M
399 0 V
692 674 M
71 41 V
60 20 V
57 18 V
47 10 V
47 11 V
51 13 V
49 8 V
43 14 V
43 11 V
34 8 V
38 11 V
37 11 V
32 10 V
26 11 V
28 10 V
29 14 V
25 11 V
28 17 V
29 14 V
15 6 V
20 9 V
19 7 V
18 10 V
15 8 V
19 11 V
14 12 V
20 16 V
15 12 V
14 15 V
25 26 V
18 21 V
20 35 V
25 42 V
25 78 V
25 137 V
6 43 V
1 8 V
0 1 V
13 -3 V
36 8 V
32 7 V
33 1 V
37 0 V
33 0 V
31 0 V
1.000 UP
stroke
LT1
LTb
3431 833 M
(RD VP2) Rshow
LT1
3515 833 M
399 0 V
660 543 M
73 82 V
54 41 V
55 48 V
42 45 V
40 60 V
42 89 V
31 76 V
29 124 V
29 144 V
18 159 V
1 40 V
1 0 V
4 13 V
39 77 V
45 3 V
47 -1 V
38 6 V
43 2 V
43 0 V
23 1 V
42 0 V
34 0 V
38 0 V
32 0 V
25 -2 V
27 2 V
27 0 V
25 0 V
34 0 V
24 0 V
29 0 V
23 0 V
13 0 V
32 0 V
30 0 V
22 0 V
21 0 V
32 0 V
25 0 V
27 0 V
24 0 V
24 0 V
43 0 V
22 0 V
23 0 V
19 0 V
28 0 V
21 0 V
105 0 V
13 0 V
22 0 V
57 0 V
27 0 V
24 0 V
67 0 V
21 0 V
24 0 V
28 0 V
26 0 V
30 0 V
23 0 V
19 0 V
20 0 V
20 0 V
34 0 V
81 13 V
716 -6 V
29 5 V
13 1 V
30 0 V
192 3 V
27 -5 V
24 80 V
14 46 V
28 69 V
18 55 V
26 47 V
25 244 V
14 308 V
13 9 V
660 543 Pls
733 625 Pls
787 666 Pls
842 714 Pls
884 759 Pls
924 819 Pls
966 908 Pls
997 984 Pls
1026 1108 Pls
1055 1252 Pls
1073 1411 Pls
1074 1451 Pls
1075 1451 Pls
1075 1451 Pls
1075 1451 Pls
1075 1451 Pls
1075 1451 Pls
1075 1451 Pls
1079 1464 Pls
1118 1541 Pls
1163 1544 Pls
1210 1543 Pls
1248 1549 Pls
1291 1551 Pls
1334 1551 Pls
1357 1552 Pls
1399 1552 Pls
1433 1552 Pls
1471 1552 Pls
1503 1552 Pls
1528 1550 Pls
1555 1552 Pls
1582 1552 Pls
1607 1552 Pls
1641 1552 Pls
1665 1552 Pls
1694 1552 Pls
1717 1552 Pls
1730 1552 Pls
1762 1552 Pls
1792 1552 Pls
1814 1552 Pls
1835 1552 Pls
1867 1552 Pls
1892 1552 Pls
1919 1552 Pls
1943 1552 Pls
1967 1552 Pls
2010 1552 Pls
2032 1552 Pls
2055 1552 Pls
2074 1552 Pls
2102 1552 Pls
2123 1552 Pls
2228 1552 Pls
2241 1552 Pls
2263 1552 Pls
2320 1552 Pls
2347 1552 Pls
2371 1552 Pls
2438 1552 Pls
2459 1552 Pls
2483 1552 Pls
2511 1552 Pls
2537 1552 Pls
2567 1552 Pls
2590 1552 Pls
2609 1552 Pls
2629 1552 Pls
2649 1552 Pls
2683 1552 Pls
2764 1565 Pls
3480 1559 Pls
3509 1564 Pls
3522 1565 Pls
3552 1565 Pls
3744 1568 Pls
3771 1563 Pls
3795 1643 Pls
3809 1689 Pls
3837 1758 Pls
3855 1813 Pls
3881 1860 Pls
3906 2104 Pls
3920 2412 Pls
3933 2421 Pls
3714 833 Pls
1.000 UP
2.000 UL
LT2
LTb
3431 693 M
(RD VP3) Rshow
LT2
3515 693 M
399 0 V
650 556 M
67 134 V
45 149 V
42 412 V
14 277 V
0 5 V
27 126 V
51 120 V
60 33 V
49 2 V
51 0 V
51 0 V
49 0 V
47 0 V
49 0 V
45 0 V
43 0 V
46 0 V
37 0 V
31 0 V
36 0 V
32 0 V
35 0 V
48 0 V
33 0 V
26 0 V
27 0 V
28 0 V
27 0 V
22 0 V
26 0 V
30 0 V
25 0 V
17 0 V
20 0 V
19 0 V
21 0 V
27 0 V
27 0 V
24 0 V
25 0 V
27 0 V
28 0 V
25 0 V
26 0 V
21 0 V
25 0 V
23 0 V
28 0 V
27 0 V
28 0 V
25 0 V
28 0 V
26 0 V
25 0 V
25 0 V
28 0 V
18 0 V
11 0 V
20 0 V
26 0 V
23 0 V
17 0 V
31 0 V
22 0 V
17 0 V
20 0 V
25 0 V
26 0 V
32 0 V
22 0 V
20 0 V
22 0 V
508 30 V
25 57 V
43 23 V
393 94 V
23 0 V
26 0 V
13 0 V
650 556 Crs
717 690 Crs
762 839 Crs
804 1251 Crs
818 1528 Crs
818 1533 Crs
818 1533 Crs
818 1533 Crs
818 1533 Crs
818 1533 Crs
845 1659 Crs
896 1779 Crs
956 1812 Crs
1005 1814 Crs
1056 1814 Crs
1107 1814 Crs
1156 1814 Crs
1203 1814 Crs
1252 1814 Crs
1297 1814 Crs
1340 1814 Crs
1386 1814 Crs
1423 1814 Crs
1454 1814 Crs
1490 1814 Crs
1522 1814 Crs
1557 1814 Crs
1605 1814 Crs
1638 1814 Crs
1664 1814 Crs
1691 1814 Crs
1719 1814 Crs
1746 1814 Crs
1768 1814 Crs
1794 1814 Crs
1824 1814 Crs
1849 1814 Crs
1866 1814 Crs
1886 1814 Crs
1905 1814 Crs
1926 1814 Crs
1953 1814 Crs
1980 1814 Crs
2004 1814 Crs
2029 1814 Crs
2056 1814 Crs
2084 1814 Crs
2109 1814 Crs
2135 1814 Crs
2156 1814 Crs
2181 1814 Crs
2204 1814 Crs
2232 1814 Crs
2259 1814 Crs
2287 1814 Crs
2312 1814 Crs
2340 1814 Crs
2366 1814 Crs
2391 1814 Crs
2416 1814 Crs
2444 1814 Crs
2462 1814 Crs
2473 1814 Crs
2493 1814 Crs
2519 1814 Crs
2542 1814 Crs
2559 1814 Crs
2590 1814 Crs
2612 1814 Crs
2629 1814 Crs
2649 1814 Crs
2674 1814 Crs
2700 1814 Crs
2732 1814 Crs
2754 1814 Crs
2774 1814 Crs
2796 1814 Crs
3304 1844 Crs
3329 1901 Crs
3372 1924 Crs
3765 2018 Crs
3788 2018 Crs
3814 2018 Crs
3827 2018 Crs
3714 693 Crs
1.000 UP
2.000 UL
LT3
LTb
3431 553 M
(VI) Rshow
LT3
3515 553 M
399 0 V
693 519 M
31 16 V
32 10 V
62 19 V
126 25 V
125 16 V
94 10 V
32 2 V
31 5 V
32 2 V
62 2 V
63 4 V
188 22 V
314 15 V
314 32 V
314 18 V
628 43 V
627 337 V
63 32 V
63 33 V
62 69 V
63 28 V
stroke
1.000 UL
LTb
630 2604 N
630 420 L
3452 0 V
0 2184 V
-3452 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
